{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","className","url","controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA6FeA,MAxFf,WACI,MAA0BC,mBAAiB,IAA3C,mBACA,GADA,UACgCA,oBAAkB,IAAlD,mBACA,GADA,UAC8CA,oBAAkB,IAAhE,mBAgBA,OAhBA,UAiBI,sBAAKC,UAAU,MAAf,UAoBI,oDACA,+IAEA,wGACA,sBAAKA,UAAU,uBAAf,UACI,kDACA,cAAC,IAAD,CACIC,IAAI,gCACJC,UAAQ,IAEZ,sLAIJ,sBAAKF,UAAU,uBAAf,UACI,qDACA,cAAC,IAAD,CACIC,IAAI,gCACJC,UAAQ,IAEZ,gJAIJ,sBAAKF,UAAU,uBAAf,UACI,0DACA,cAAC,IAAD,CACIC,IAAI,gCACJC,UAAQ,IAEZ,wNAIJ,sBAAKF,UAAU,uBAAf,UACI,4DACA,cAAC,IAAD,CACIC,IAAI,gCACJC,UAAQ,IAEZ,6KCvEDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24bc9da0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport ReactPlayer from \"react-player\"\n\n\nfunction App() {\n    const [input, setInput] = useState<string>(\"\")\n    const [verified, setVerified] = useState<Boolean>(false)\n    const [isPasswordWrong, setIsPasswordWrong] = useState<Boolean>(false)\n\n    // onChange\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value);\n    };\n\n    // onSubmit\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log(input)\n        if (input === \"dlrocks\") {\n            setVerified(true)\n        } else setIsPasswordWrong(true)\n    };\n\n    return (\n        <div className=\"App\">\n            {/*{verified ? <Report/> :*/}\n            {/*    <div>*/}\n            {/*        <form onSubmit={onSubmit} className=\"app__password-container\">*/}\n            {/*            <p>*/}\n            {/*                Please enter the passkey to continue:*/}\n            {/*            </p>*/}\n            {/*            {isPasswordWrong && <p>Wrong passkey!</p>}*/}\n            {/*            <input*/}\n            {/*                className=\"app__password-form\"*/}\n            {/*                name='password'*/}\n            {/*                id='password'*/}\n            {/*                type='password'*/}\n            {/*                placeholder='Passkey'*/}\n            {/*                onChange={onChange}*/}\n            {/*                required*/}\n            {/*            />*/}\n            {/*            <button type='submit' className=\"app__password-submit\">Login</button>*/}\n            {/*        </form>*/}\n            {/*    </div>}*/}\n            <h1>Supplemental media</h1>\n            <h2>Hopefully these snippets will help to add context about our progress, setbacks, and our many lines of\n                effort.</h2>\n            <h3>Thanks for a fun and educational semester - Andrew, Bennet, and Aanand</h3>\n            <div className=\"app__video-container\">\n                <h1>Full match (50s)</h1>\n                <ReactPlayer\n                    url=\"https://streamable.com/2nbcni\"\n                    controls\n                />\n                <p>Our image-based agent had many drawbacks -- among them, a 'hitch' when in the search state, as well\n                    as a tendency to overshoot/overkick the puck. </p>\n            </div>\n\n            <div className=\"app__video-container\">\n                <h1>Image-based pursuit</h1>\n                <ReactPlayer\n                    url=\"https://streamable.com/om2v3g\"\n                    controls\n                />\n                <p>Our image-based agent was able to track down and pursue a puck, as long as it remained in our\n                    field of view.</p>\n            </div>\n\n            <div className=\"app__video-container\">\n                <h1>State-based frustrations</h1>\n                <ReactPlayer\n                    url=\"https://streamable.com/gg2vse\"\n                    controls\n                />\n                <p>As mentioned, our state-based agent displayed a lot of frustrating behavior, markedly this one, where\n                    it would hide in the goal and wait for the other team to bring them the puck. </p>\n            </div>\n\n            <div className=\"app__video-container\">\n                <h1>State-based starting point</h1>\n                <ReactPlayer\n                    url=\"https://streamable.com/jwfhcd\"\n                    controls\n                />\n                <p>Similar behavior occurred here, where the state-based agent went directly for the reward spike\n                    awaiting them in the opponent's goal. </p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}