{"version":3,"sources":["Report.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Report","useState","md","setMd","useEffect","fetch","then","res","text","console","log","children","App","input","setInput","verified","setVerified","isPasswordWrong","setIsPasswordWrong","className","onSubmit","event","preventDefault","name","id","type","placeholder","onChange","target","value","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGe,SAASA,IACpB,MAAoBC,mBAAiB,IAArC,mBAAOC,EAAP,KAAWC,EAAX,KAUA,OARAC,qBAAU,WACNC,MAAM,2BACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GACHO,QAAQC,IAAIR,GACZC,EAAOD,SAIf,cAAC,IAAD,CAAUS,SAAUT,ICiCbU,MA5Cf,WACI,MAA0BX,mBAAiB,IAA3C,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAgCb,oBAAkB,GAAlD,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAA8Cf,oBAAkB,GAAhE,mBAAOgB,EAAP,KAAwBC,EAAxB,KAgBA,OACI,qBAAKC,UAAU,MAAf,SACKJ,EAAW,cAACf,EAAD,IACR,8BACI,uBAAMoB,SAZL,SAACC,GACdA,EAAMC,iBACNb,QAAQC,IAAIG,GACE,YAAVA,EACAG,GAAY,GACTE,GAAmB,IAOYC,UAAU,0BAApC,UACA,sEAGKF,GAAmB,+CAChB,uBACIE,UAAU,qBACVI,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,YAAY,UACZC,SA5BX,SAACN,GACdP,EAASO,EAAMO,OAAOC,QA4BEC,UAAQ,IAEZ,wBAAQL,KAAK,SAASN,UAAU,uBAAhC,2BC3BbY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.517b2442.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Markdown from 'react-markdown'\n\nexport default function Report(){\n    const [md, setMd] = useState<string>(\"\")\n\n    useEffect(() => {\n        fetch('./dl_final/my_readme.md')\n            .then((res) => res.text())\n            .then((md) => {\n                console.log(md)\n                setMd( md )\n            })\n    })\n    return (\n        <Markdown children={md} />\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport Report from \"./Report\";\n\nfunction App() {\n    const [input, setInput] = useState<string>(\"\")\n    const [verified, setVerified] = useState<Boolean>(false)\n    const [isPasswordWrong, setIsPasswordWrong] = useState<Boolean>(false)\n\n    // onChange\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value);\n    };\n\n    // onSubmit\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        console.log(input)\n        if (input === \"dlrocks\") {\n            setVerified(true)\n        } else setIsPasswordWrong(true)\n    };\n\n    return (\n        <div className=\"App\">\n            {verified ? <Report/> :\n                <div >\n                    <form onSubmit={onSubmit} className=\"app__password-container\" >\n                    <p>\n                        Please enter the passkey to continue:\n                    </p>\n                        {isPasswordWrong && <p>Wrong passkey!</p>}\n                            <input\n                                className=\"app__password-form\"\n                                name='password'\n                                id='password'\n                                type='password'\n                                placeholder='Passkey'\n                                onChange={onChange}\n                                required\n                            />\n                            <button type='submit' className=\"app__password-submit\">Login</button>\n                    </form>\n                </div>}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}